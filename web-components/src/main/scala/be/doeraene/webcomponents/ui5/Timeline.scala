package be.doeraene.webcomponents.ui5

import be.doeraene.webcomponents.ui5.configkeys.{ButtonDesign, ColourScheme, IconName, TimelineLayout}
import be.doeraene.webcomponents.ui5.internal.Slot
import com.raquo.laminar.codecs.{BooleanAsAttrPresenceCodec, StringAsIsCodec}
import com.raquo.laminar.api.L.*
import com.raquo.laminar.tags.CustomHtmlTag
import com.raquo.laminar.keys.HtmlAttr
import com.raquo.laminar.nodes.ReactiveHtmlElement
import org.scalajs.dom

import scala.scalajs.js
import scala.scalajs.js.annotation.JSImport
import be.doeraene.webcomponents.ui5.eventtypes.EventWithPreciseTarget
import be.doeraene.webcomponents.WebComponent

/** The ui5-timeline component shows entries (such as objects, events, or posts) in chronological order. A common use
  * case is to provide information about changes to an object, or events related to an object. These entries can be
  * generated by the system (for example, value XY changed from A to B), or added manually. There are two distinct
  * variants of the timeline: basic and social. The basic timeline is read-only, while the social timeline offers a high
  * level of interaction and collaboration, and is integrated within SAP Jam.
  *
  * @see
  *   <a href="https://sap.github.io/ui5-webcomponents/playground/components/Timeline/">the doc</a> for more
  *   information.
  */
object Timeline extends WebComponent {

  @js.native
  trait RawElement extends js.Object {}

  @js.native
  @JSImport("@ui5/webcomponents-fiori/dist/Timeline.js", JSImport.Default)
  object RawImport extends js.Object

  // object-s are lazy so you need to actually use them in your code to prevent dead code elimination
  used(RawImport)

  type Ref = dom.html.Element with RawElement

  protected val tag: CustomHtmlTag[Ref] = CustomHtmlTag("ui5-timeline")

  lazy val accessibleName: HtmlAttr[String] = htmlAttr("accessible-name", StringAsIsCodec)

  lazy val layout: HtmlAttr[TimelineLayout] = htmlAttr("layout", TimelineLayout.AsStringCodec)

  object slots {}

  object events {}

  //noinspection TypeAnnotation
  def item = TimelineItem

}
